group 'dbaltor'
version '1.0.0'

apply plugin: 'application'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.palantir.docker'

mainClassName = 'map.Supplier'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

buildscript {
  repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}	  
  }
  dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')	  
  }
}

dependencyManagement {
  imports {
	  mavenBom 'software.amazon.awssdk:bom:2.1.0'
  }
}

dependencies {
  compile 'software.amazon.awssdk:sns'
  compile 'software.amazon.awssdk:sqs'
  testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'map.Supplier'
//      'Main-Class': 'qm.QueueManager'
    )
  }
}
  
task finalise(type: Exec) {
	dependsOn build
	commandLine "cmd", "/c", "cp ./build/libs/${project.name}-${project.version}.jar ./build/distributions/${project.name}-${project.version}/lib/"
    println("Will copy generated archive at the end.\n cp ./build/libs/${project.name}-${project.version}.jar ./build/distributions/${project.name}-${project.version}/lib/")
}

build.finalizedBy(finalise)

docker {
    dependsOn build
    name "${project.group}/${project.name}:${project.version}"
	files tasks.distTar.outputs
	copySpec.from("files").into(".")
	buildArgs(['TAR_FILE': "${project.name}-${project.version}.tar"])
}
dockerfileZip.enabled = false